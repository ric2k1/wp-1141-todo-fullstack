#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""簡體中文轉繁體中文腳本"""

import os
import re

# 簡繁對照表（常用詞彙）
S2T_MAP = {
    # 常用動詞
    '创建': '建立', '构建': '構建', '运行': '執行', '访问': '存取',
    '测试': '測試', '启动': '啟動', '停止': '停止', '删除': '刪除',
    '更新': '更新', '查看': '查看', '修改': '修改', '添加': '新增',
    '检查': '檢查', '确保': '確保', '显示': '顯示', '生成': '產生',
    '获取': '取得', '配置': '設定', '输出': '輸出', '输入': '輸入',
    '连接': '連線', '验证': '驗證', '克隆': '複製', '提交': '提交',
    '推送': '推送', '登录': '登入', '注册': '註冊', '分享': '分享',
    '继续': '繼續', '返回': '返回', '开始': '開始', '结束': '結束',
    '处理': '處理', '设计': '設計', '开发': '開發', '安装': '安裝',
    '卸载': '解安裝', '选择': '選擇', '执行': '執行',
    
    # 常用名詞
    '应用': '應用', '项目': '專案', '数据': '資料', '数据库': '資料庫',
    '文件': '檔案', '文档': '文件', '目录': '目錄', '组件': '元件',
    '前端': '前端', '后端': '後端', '服务': '服務', '服务器': '伺服器',
    '框架': '框架', '类型': '類型', '环境': '環境', '系统': '系統',
    '软件': '軟體', '功能': '功能', '网址': '網址', '网站': '網站',
    '浏览器': '瀏覽器', '客户端': '客戶端', '程序': '程式', '进程': '程序',
    '代码': '程式碼', '脚本': '腳本', '命令': '命令', '错误': '錯誤',
    '问题': '問題', '状态': '狀態', '模式': '模式', '样式': '樣式',
    '内容': '內容', '步骤': '步驟', '方式': '方式', '场景': '場景',
    '流程': '流程', '对比': '對比', '简介': '簡介', '特色': '特色',
    '优点': '優點', '限制': '限制', '建议': '建議', '平台': '平台',
    '工具': '工具', '资源': '資源', '请求': '請求', '响应': '回應',
    '接口': '介面', '路由': '路由', '隧道': '隧道', '加密': '加密',
    '认证': '認證', '访客': '訪客', '用户': '使用者',
    
    # 技術詞彙
    '技术栈': '技術棧', '业务逻辑': '業務邏輯', '热重载': '熱重載',
    '构建工具': '構建工具', '类型安全': '類型安全', '运行时环境': '運行時環境',
    '数据验证': '資料驗證', '环境变量': '環境變數', '包管理器': '套件管理器',
    '服务层': '服務層', '反向代理': '反向代理', '公网隧道': '公網隧道',
    '静态文件': '靜態檔案', '前端开发': '前端開發', '后端服务': '後端服務',
    '数据库模型': '資料庫模型', '启动脚本': '啟動腳本', '停止脚本': '停止腳本',
    '项目文档': '專案文件', '项目结构': '專案結構', '自定义': '自訂',
    '服务器入口': '伺服器入口', '代码检查': '程式碼檢查', '版本控制': '版本控制',
    
    # 常用形容詞
    '现代化': '現代化', '完整': '完整', '简单': '簡單', '复杂': '複雜',
    '必需': '必需', '可选': '可選', '推荐': '推薦', '免费': '免費',
    '公开': '公開', '私有': '私有', '本地': '本地', '远程': '遠端',
    '自动': '自動', '手动': '手動', '实时': '即時', '最终': '最終',
    '主要': '主要', '详细': '詳細', '基础': '基礎',
    
    # 常用副詞和連詞
    '请': '請', '将': '將', '应': '應', '会': '會', '能': '能',
    '需要': '需要', '可以': '可以', '如果': '如果', '或者': '或者',
    '以及': '以及', '任何': '任何', '所有': '所有', '每个': '每個',
    '首次': '首次', '单独': '單獨', '依次': '依次', '已经': '已經',
    '正在': '正在', '已存在': '已存在', '不要': '不要',
    
    # 特定短語
    '在开始之前': '在開始之前', '以下软件': '以下軟體',
    '安装步骤': '安裝步驟', '运行应用': '執行應用',
    '一键启动': '一鍵啟動', '本机访问': '本機存取',
    '公开访问': '公開存取', '局域网访问': '區域網路存取',
    '互联网': '網際網路', '社交媒体': '社交媒體',
    '欢迎提交': '歡迎提交', '如有问题': '如有問題',
    '联系方式': '聯絡方式', '注意事项': '注意事項',
    '使用场景': '使用場景', '常见问题': '常見問題',
    '推荐部署': '推薦部署', '生产环境': '生產環境',
    '开发环境': '開發環境', '测试环境': '測試環境',
    '版本号': '版本號', '端口': '埠號', '默认': '預設',
    '或更高': '或更高',
}

def convert_file(filepath):
    """轉換單個文件"""
    try:
        with open(filepath, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        
        # 批量替換
        for simplified, traditional in S2T_MAP.items():
            content = content.replace(simplified, traditional)
        
        # 只有內容改變時才寫回
        if content != original_content:
            with open(filepath, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f'✅ 已轉換: {filepath}')
            return True
        else:
            print(f'⏭️  無需轉換: {filepath}')
            return False
    except Exception as e:
        print(f'❌ 轉換失敗 {filepath}: {e}')
        return False

def main():
    """主函數"""
    files_to_convert = [
        'README.md',
        'QUICK_START.md',
        'NGROK_MIGRATION.md',
        'start-all.sh',
        'stop-all.sh',
        'backend/src/index.ts',
        'frontend/src/types/todo.ts',
        'frontend/src/hooks/useAddTodoForm.ts',
    ]
    
    # 檢查是否存在 TYPESCRIPT_MIGRATION.md
    if os.path.exists('TYPESCRIPT_MIGRATION.md'):
        files_to_convert.append('TYPESCRIPT_MIGRATION.md')
    
    converted_count = 0
    for file in files_to_convert:
        if os.path.exists(file):
            if convert_file(file):
                converted_count += 1
        else:
            print(f'⚠️  檔案不存在: {file}')
    
    print(f'\n🎉 轉換完成！共轉換了 {converted_count} 個檔案。')

if __name__ == '__main__':
    main()

